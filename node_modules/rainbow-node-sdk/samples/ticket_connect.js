var NodeSDK = require("../index");

var nodeSDK = new NodeSDK({
    "rainbow": {
        "host": "demo.openrainbow.org",
        "mode": "xmpp"
    },
    "credentials": {
        "login": "",
        "password": ""
    },
    application: {
        "appID": "",
        "appSecret": ""
    },
    logs: {
        enableConsoleLogs: true,
        enableFileLogs: false,
        file: {
            path: "/var/tmp/rainbowsdk/",
            level: "debug"
        }
    },
    im: {
        sendReadReceipt: false  //false to not send a read receipt automatically
    }
});

let disconnected = false;

nodeSDK.events.on("rainbow_onstarted", (jsonMessage) => {
    console.log("[Rainbow] >>> STARTED", jsonMessage);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
});

nodeSDK.events.on("rainbow_onstopped", (jsonMessage) => {
    console.log("[Rainbow] >>> STOPPED", jsonMessage);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
});

nodeSDK.events.on("rainbow_onerror", (jsonMessage) => {
    console.log("[Rainbow] >>> ERROR", jsonMessage);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
});

nodeSDK.events.on("rainbow_onfailed", (jsonMessage) => {
    console.log("[Rainbow] >>> FAILED", jsonMessage);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
});

nodeSDK.events.on("rainbow_onconnected", (jsonMessage) => {
    console.log("[Rainbow] >>> CONNECTED", jsonMessage);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
});

nodeSDK.events.on("rainbow_onconnectionerror", (err) => {
    console.log("[Rainbow] >>> CONNECTION ERROR", err);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
});

nodeSDK.events.on("rainbow_onready", (jsonMessage) => {
    console.log("[Rainbow] >>> READY", jsonMessage);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
    if (disconnected) {
        disconnected = false;
        nodeSDK.contacts.getContactById("581b4033383b2852d37aa097");
    }
});

nodeSDK.events.on("rainbow_ondisconnected", (jsonMessage) => {
    console.log("[Rainbow] >>> DISCONNECTED", jsonMessage);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
    disconnected = true;
});

nodeSDK.events.on("rainbow_onreconnecting", (err) => {
    console.log("[Rainbow] >>> RECONNECTING ATTEMPT", err);
    console.log("[Rainbow] >>> STATE", nodeSDK.state);
});

console.log("[Rainbow] >>> STATE", nodeSDK.state);
nodeSDK.start();
